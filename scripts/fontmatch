#!/usr/bin/python3

import argparse, json, timeit
from langtag import lookup, langtag

keyfields = {'scr': 'script', 'lang': 'lang', 'reg': 'region'}
def match1(rules, ltag):
    if isinstance(ltag, str):
        ltag = langtag(str)
    for r in rules:
        for k, v in r["match"].items():
            if isinstance(v, str):
                if getattr(ltag, keyfields[k]) != v:
                    break
            elif getattr(ltag, keyfields[k]) not in v:
                break
        else:
            return r["result"]
    return None

parser = argparse.ArgumentParser()
parser.add_argument("langtag",help="langtag to search for")
parser.add_argument("-r","--rules",default="fontrules.json",help="rules file")
parser.add_argument("-T","--timeit",action="store_true",help="Time the various matching algorithms")
args = parser.parse_args()

with open(args.rules, encoding="utf-8") as inf:
    rules = json.load(inf)

ltagset = lookup(args.langtag)
if ltagset is None:
    ltag = langtag(args.langtag)
else:
    ltag = ltagset.full

print(f"Searching for {ltag}")
if args.timeit:
    g = {'rules': rules, 'ltag': ltag}
    for a in ('match1',):
        g[a] = globals()[a]
        t = timeit.timeit(stmt="match1(rules, ltag)", globals=g, number=100000)
        print(f"{a} -> {t * 10} mS")
res = match1(rules, ltag)
if res is not None:
    print(json.dumps(res))
